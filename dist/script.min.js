'use strict'
function dataMediaQueries(t, a) {
    var e = Array.from(t).filter(function (t, e, r) {
        if (t.dataset[a]) return t.dataset[a].split(',')[0]
    })
    if (e.length) {
        var r = []
        e.forEach(function (t) {
            var e = {},
                s = t.dataset[a].split(',')
            ;(e.value = s[0]),
                (e.type = s[1] ? s[1].trim() : 'max'),
                (e.item = t),
                r.push(e)
        })
        var s = r.map(function (t) {
            return (
                '(' +
                t.type +
                '-width: ' +
                t.value +
                'px),' +
                t.value +
                ',' +
                t.type
            )
        })
        s = uniqArray(s)
        var i = []
        if (s.length)
            return (
                s.forEach(function (t) {
                    var a = t.split(','),
                        e = a[1],
                        s = a[2],
                        n = window.matchMedia(a[0]),
                        l = r.filter(function (t) {
                            if (t.value === e && t.type === s) return !0
                        })
                    i.push({ itemsArray: l, matchMedia: n })
                }),
                i
            )
    }
}
function getHash() {
    if (location.hash) return location.hash.replace('#', '')
}
function tabs() {
    var t = document.querySelectorAll('[data-tabs]'),
        a = []
    if (t.length > 0) {
        var e = getHash()
        e && e.startsWith('tab-') && (a = e.replace('tab-', '').split('-')),
            t.forEach(function (t, e) {
                t.classList.add('_tab-init'),
                    t.setAttribute('data-tabs-index', e),
                    t.addEventListener('click', i),
                    (function (t) {
                        var e = t.querySelectorAll('[data-tabs-titles]>*'),
                            r = t.querySelectorAll('[data-tabs-body]>*'),
                            s = t.dataset.tabsIndex,
                            i = a[0] == s
                        if (i) {
                            var n = t.querySelector(
                                '[data-tabs-titles]>._tab-active'
                            )
                            n && n.classList.remove('_tab-active')
                        }
                        r.length &&
                            ((r = Array.from(r).filter(function (a) {
                                return a.closest('[data-tabs]') === t
                            })),
                            (e = Array.from(e).filter(function (a) {
                                return a.closest('[data-tabs]') === t
                            })),
                            r.forEach(function (t, r) {
                                e[r].setAttribute('data-tabs-title', ''),
                                    t.setAttribute('data-tabs-item', ''),
                                    i &&
                                        r == a[1] &&
                                        e[r].classList.add('_tab-active'),
                                    (t.hidden =
                                        !e[r].classList.contains('_tab-active'))
                            }))
                    })(t)
            })
        var r = dataMediaQueries(t, 'tabs')
        r &&
            r.length &&
            r.forEach(function (t) {
                t.matchMedia.addEventListener('change', function () {
                    s(t.itemsArray, t.matchMedia)
                }),
                    s(t.itemsArray, t.matchMedia)
            })
    }
    function s(t, a) {
        t.forEach(function (t) {
            var e = (t = t.item).querySelector('[data-tabs-titles]'),
                r = t.querySelectorAll('[data-tabs-title]'),
                s = t.querySelector('[data-tabs-body]'),
                i = t.querySelectorAll('[data-tabs-item]')
            ;(r = Array.from(r).filter(function (a) {
                return a.closest('[data-tabs]') === t
            })),
                (i = Array.from(i).filter(function (a) {
                    return a.closest('[data-tabs]') === t
                })).forEach(function (i, n) {
                    a.matches
                        ? (s.append(r[n]),
                          s.append(i),
                          t.classList.add('_tab-spoller'))
                        : (e.append(r[n]), t.classList.remove('_tab-spoller'))
                })
        })
    }
    function i(t) {
        var a = t.target
        if (a.closest('[data-tabs-title]')) {
            var e = a.closest('[data-tabs-title]'),
                r = e.closest('[data-tabs]')
            if (
                !e.classList.contains('_tab-active') &&
                !r.querySelector('._slide')
            ) {
                var s = r.querySelectorAll('[data-tabs-title]._tab-active')
                s.length &&
                    (s = Array.from(s).filter(function (t) {
                        return t.closest('[data-tabs]') === r
                    })),
                    s.length && s[0].classList.remove('_tab-active'),
                    e.classList.add('_tab-active'),
                    (function (t) {
                        var a = t.querySelectorAll('[data-tabs-title]'),
                            e = t.querySelectorAll('[data-tabs-item]'),
                            r = t.dataset.tabsIndex,
                            s = (function (t) {
                                if (t.hasAttribute('data-tabs-animate'))
                                    return t.dataset.tabsAnimate > 0
                                        ? Number(t.dataset.tabsAnimate)
                                        : 500
                            })(t)
                        if (e.length > 0) {
                            var i = t.hasAttribute('data-tabs-hash')
                            ;(e = Array.from(e).filter(function (a) {
                                return a.closest('[data-tabs]') === t
                            })),
                                (a = Array.from(a).filter(function (a) {
                                    return a.closest('[data-tabs]') === t
                                })),
                                e.forEach(function (t, e) {
                                    a[e].classList.contains('_tab-active')
                                        ? (s
                                              ? _slideDown(t, s)
                                              : (t.hidden = !1),
                                          i &&
                                              !t.closest('.popup') &&
                                              setHash('tab-' + r + '-' + e))
                                        : s
                                        ? _slideUp(t, s)
                                        : (t.hidden = !0)
                                })
                        }
                    })(r)
            }
            t.preventDefault()
        }
    }
}
new Swiper('.hero__slider', {
    loop: !0,
    slidesPerView: 1,
    spaceBetween: 10,
    autoplay: { delay: 5e3 },
    pagination: {
        el: '.hero__slider-pagination',
        type: 'bullets',
        clickable: !0,
    },
    navigation: { nextEl: '.hero__slider-next', prevEl: '.hero__slider-prev' },
}),
    new Swiper('.about__slider', {
        loop: !0,
        slidesPerView: 1,
        spaceBetween: 10,
        autoplay: { delay: 5e3 },
        effect: 'fade',
        fadeEffect: { crossFade: !0 },
    }),
    (document.querySelector('#currentYear').innerHTML =
        new Date().getFullYear()),
    tabs()
